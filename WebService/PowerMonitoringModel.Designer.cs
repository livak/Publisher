//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PowerMonitoringModel", "FK_AlarmConfigAlarmLog", "AlarmConfigSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebService.AlarmConfig), "AlarmLogSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebService.AlarmLog), true)]
[assembly: EdmRelationshipAttribute("PowerMonitoringModel", "FK_AlarmConfigAlarmTerminal", "AlarmConfigSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebService.AlarmConfig), "AlarmTerminalSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebService.AlarmTerminal), true)]
[assembly: EdmRelationshipAttribute("PowerMonitoringModel", "FK_VariableAlarmConfig", "VariableSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebService.Variable), "AlarmConfigSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebService.AlarmConfig), true)]
[assembly: EdmRelationshipAttribute("PowerMonitoringModel", "FK_VariableDoubleLog", "VariableSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebService.Variable), "DoubleLogSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebService.DoubleLog), true)]
[assembly: EdmRelationshipAttribute("PowerMonitoringModel", "FK_VariableSingleLog", "VariableSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebService.Variable), "SingleLogSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebService.SingleLog), true)]
[assembly: EdmRelationshipAttribute("PowerMonitoringModel", "VariableSingleHistogram", "Variable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebService.Variable), "SingleHistogram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebService.SingleHistogram), true)]

#endregion

namespace WebService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PowerMonitoringModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PowerMonitoringModelContainer object using the connection string found in the 'PowerMonitoringModelContainer' section of the application configuration file.
        /// </summary>
        public PowerMonitoringModelContainer() : base("name=PowerMonitoringModelContainer", "PowerMonitoringModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PowerMonitoringModelContainer object.
        /// </summary>
        public PowerMonitoringModelContainer(string connectionString) : base(connectionString, "PowerMonitoringModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PowerMonitoringModelContainer object.
        /// </summary>
        public PowerMonitoringModelContainer(EntityConnection connection) : base(connection, "PowerMonitoringModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlarmConfig> AlarmConfigSet
        {
            get
            {
                if ((_AlarmConfigSet == null))
                {
                    _AlarmConfigSet = base.CreateObjectSet<AlarmConfig>("AlarmConfigSet");
                }
                return _AlarmConfigSet;
            }
        }
        private ObjectSet<AlarmConfig> _AlarmConfigSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlarmLog> AlarmLogSet
        {
            get
            {
                if ((_AlarmLogSet == null))
                {
                    _AlarmLogSet = base.CreateObjectSet<AlarmLog>("AlarmLogSet");
                }
                return _AlarmLogSet;
            }
        }
        private ObjectSet<AlarmLog> _AlarmLogSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlarmTerminal> AlarmTerminalSet
        {
            get
            {
                if ((_AlarmTerminalSet == null))
                {
                    _AlarmTerminalSet = base.CreateObjectSet<AlarmTerminal>("AlarmTerminalSet");
                }
                return _AlarmTerminalSet;
            }
        }
        private ObjectSet<AlarmTerminal> _AlarmTerminalSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoubleLog> DoubleLogSet
        {
            get
            {
                if ((_DoubleLogSet == null))
                {
                    _DoubleLogSet = base.CreateObjectSet<DoubleLog>("DoubleLogSet");
                }
                return _DoubleLogSet;
            }
        }
        private ObjectSet<DoubleLog> _DoubleLogSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SingleLog> SingleLogSet
        {
            get
            {
                if ((_SingleLogSet == null))
                {
                    _SingleLogSet = base.CreateObjectSet<SingleLog>("SingleLogSet");
                }
                return _SingleLogSet;
            }
        }
        private ObjectSet<SingleLog> _SingleLogSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Variable> VariableSet
        {
            get
            {
                if ((_VariableSet == null))
                {
                    _VariableSet = base.CreateObjectSet<Variable>("VariableSet");
                }
                return _VariableSet;
            }
        }
        private ObjectSet<Variable> _VariableSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SingleHistogram> SingleHistogramSet
        {
            get
            {
                if ((_SingleHistogramSet == null))
                {
                    _SingleHistogramSet = base.CreateObjectSet<SingleHistogram>("SingleHistogramSet");
                }
                return _SingleHistogramSet;
            }
        }
        private ObjectSet<SingleHistogram> _SingleHistogramSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlarmConfigSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlarmConfigSet(AlarmConfig alarmConfig)
        {
            base.AddObject("AlarmConfigSet", alarmConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlarmLogSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlarmLogSet(AlarmLog alarmLog)
        {
            base.AddObject("AlarmLogSet", alarmLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlarmTerminalSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlarmTerminalSet(AlarmTerminal alarmTerminal)
        {
            base.AddObject("AlarmTerminalSet", alarmTerminal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoubleLogSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoubleLogSet(DoubleLog doubleLog)
        {
            base.AddObject("DoubleLogSet", doubleLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SingleLogSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSingleLogSet(SingleLog singleLog)
        {
            base.AddObject("SingleLogSet", singleLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VariableSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVariableSet(Variable variable)
        {
            base.AddObject("VariableSet", variable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SingleHistogramSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSingleHistogramSet(SingleHistogram singleHistogram)
        {
            base.AddObject("SingleHistogramSet", singleHistogram);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="AlarmConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlarmConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlarmConfig object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hIHI_Enable">Initial value of the HIHI_Enable property.</param>
        /// <param name="hIHI_Name">Initial value of the HIHI_Name property.</param>
        /// <param name="hIHI_LevelChange">Initial value of the HIHI_LevelChange property.</param>
        /// <param name="hIHI_Delay">Initial value of the HIHI_Delay property.</param>
        /// <param name="hI_Enable">Initial value of the HI_Enable property.</param>
        /// <param name="hI_Name">Initial value of the HI_Name property.</param>
        /// <param name="hI_LevelChange">Initial value of the HI_LevelChange property.</param>
        /// <param name="hI_Delay">Initial value of the HI_Delay property.</param>
        /// <param name="lO_Enable">Initial value of the LO_Enable property.</param>
        /// <param name="lO_Name">Initial value of the LO_Name property.</param>
        /// <param name="lO_LevelChange">Initial value of the LO_LevelChange property.</param>
        /// <param name="lO_Delay">Initial value of the LO_Delay property.</param>
        /// <param name="lOLO_Enabled">Initial value of the LOLO_Enabled property.</param>
        /// <param name="lOLO_Name">Initial value of the LOLO_Name property.</param>
        /// <param name="lOLO_LevelChange">Initial value of the LOLO_LevelChange property.</param>
        /// <param name="lOLO_Delay">Initial value of the LOLO_Delay property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static AlarmConfig CreateAlarmConfig(global::System.Int32 id, global::System.Boolean hIHI_Enable, global::System.String hIHI_Name, global::System.Double hIHI_LevelChange, global::System.Int32 hIHI_Delay, global::System.Boolean hI_Enable, global::System.String hI_Name, global::System.Double hI_LevelChange, global::System.Int32 hI_Delay, global::System.Boolean lO_Enable, global::System.String lO_Name, global::System.Double lO_LevelChange, global::System.Int32 lO_Delay, global::System.Boolean lOLO_Enabled, global::System.String lOLO_Name, global::System.Double lOLO_LevelChange, global::System.Int32 lOLO_Delay, global::System.Boolean enabled, global::System.String location)
        {
            AlarmConfig alarmConfig = new AlarmConfig();
            alarmConfig.Id = id;
            alarmConfig.HIHI_Enable = hIHI_Enable;
            alarmConfig.HIHI_Name = hIHI_Name;
            alarmConfig.HIHI_LevelChange = hIHI_LevelChange;
            alarmConfig.HIHI_Delay = hIHI_Delay;
            alarmConfig.HI_Enable = hI_Enable;
            alarmConfig.HI_Name = hI_Name;
            alarmConfig.HI_LevelChange = hI_LevelChange;
            alarmConfig.HI_Delay = hI_Delay;
            alarmConfig.LO_Enable = lO_Enable;
            alarmConfig.LO_Name = lO_Name;
            alarmConfig.LO_LevelChange = lO_LevelChange;
            alarmConfig.LO_Delay = lO_Delay;
            alarmConfig.LOLO_Enabled = lOLO_Enabled;
            alarmConfig.LOLO_Name = lOLO_Name;
            alarmConfig.LOLO_LevelChange = lOLO_LevelChange;
            alarmConfig.LOLO_Delay = lOLO_Delay;
            alarmConfig.Enabled = enabled;
            alarmConfig.Location = location;
            return alarmConfig;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HIHI_Enable
        {
            get
            {
                return _HIHI_Enable;
            }
            set
            {
                OnHIHI_EnableChanging(value);
                ReportPropertyChanging("HIHI_Enable");
                _HIHI_Enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIHI_Enable");
                OnHIHI_EnableChanged();
            }
        }
        private global::System.Boolean _HIHI_Enable;
        partial void OnHIHI_EnableChanging(global::System.Boolean value);
        partial void OnHIHI_EnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HIHI_Name
        {
            get
            {
                return _HIHI_Name;
            }
            set
            {
                OnHIHI_NameChanging(value);
                ReportPropertyChanging("HIHI_Name");
                _HIHI_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HIHI_Name");
                OnHIHI_NameChanged();
            }
        }
        private global::System.String _HIHI_Name;
        partial void OnHIHI_NameChanging(global::System.String value);
        partial void OnHIHI_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HIHI_LevelChange
        {
            get
            {
                return _HIHI_LevelChange;
            }
            set
            {
                OnHIHI_LevelChangeChanging(value);
                ReportPropertyChanging("HIHI_LevelChange");
                _HIHI_LevelChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIHI_LevelChange");
                OnHIHI_LevelChangeChanged();
            }
        }
        private global::System.Double _HIHI_LevelChange;
        partial void OnHIHI_LevelChangeChanging(global::System.Double value);
        partial void OnHIHI_LevelChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HIHI_Delay
        {
            get
            {
                return _HIHI_Delay;
            }
            set
            {
                OnHIHI_DelayChanging(value);
                ReportPropertyChanging("HIHI_Delay");
                _HIHI_Delay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIHI_Delay");
                OnHIHI_DelayChanged();
            }
        }
        private global::System.Int32 _HIHI_Delay;
        partial void OnHIHI_DelayChanging(global::System.Int32 value);
        partial void OnHIHI_DelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HI_Enable
        {
            get
            {
                return _HI_Enable;
            }
            set
            {
                OnHI_EnableChanging(value);
                ReportPropertyChanging("HI_Enable");
                _HI_Enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HI_Enable");
                OnHI_EnableChanged();
            }
        }
        private global::System.Boolean _HI_Enable;
        partial void OnHI_EnableChanging(global::System.Boolean value);
        partial void OnHI_EnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HI_Name
        {
            get
            {
                return _HI_Name;
            }
            set
            {
                OnHI_NameChanging(value);
                ReportPropertyChanging("HI_Name");
                _HI_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HI_Name");
                OnHI_NameChanged();
            }
        }
        private global::System.String _HI_Name;
        partial void OnHI_NameChanging(global::System.String value);
        partial void OnHI_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HI_LevelChange
        {
            get
            {
                return _HI_LevelChange;
            }
            set
            {
                OnHI_LevelChangeChanging(value);
                ReportPropertyChanging("HI_LevelChange");
                _HI_LevelChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HI_LevelChange");
                OnHI_LevelChangeChanged();
            }
        }
        private global::System.Double _HI_LevelChange;
        partial void OnHI_LevelChangeChanging(global::System.Double value);
        partial void OnHI_LevelChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HI_Delay
        {
            get
            {
                return _HI_Delay;
            }
            set
            {
                OnHI_DelayChanging(value);
                ReportPropertyChanging("HI_Delay");
                _HI_Delay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HI_Delay");
                OnHI_DelayChanged();
            }
        }
        private global::System.Int32 _HI_Delay;
        partial void OnHI_DelayChanging(global::System.Int32 value);
        partial void OnHI_DelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LO_Enable
        {
            get
            {
                return _LO_Enable;
            }
            set
            {
                OnLO_EnableChanging(value);
                ReportPropertyChanging("LO_Enable");
                _LO_Enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LO_Enable");
                OnLO_EnableChanged();
            }
        }
        private global::System.Boolean _LO_Enable;
        partial void OnLO_EnableChanging(global::System.Boolean value);
        partial void OnLO_EnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LO_Name
        {
            get
            {
                return _LO_Name;
            }
            set
            {
                OnLO_NameChanging(value);
                ReportPropertyChanging("LO_Name");
                _LO_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LO_Name");
                OnLO_NameChanged();
            }
        }
        private global::System.String _LO_Name;
        partial void OnLO_NameChanging(global::System.String value);
        partial void OnLO_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LO_LevelChange
        {
            get
            {
                return _LO_LevelChange;
            }
            set
            {
                OnLO_LevelChangeChanging(value);
                ReportPropertyChanging("LO_LevelChange");
                _LO_LevelChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LO_LevelChange");
                OnLO_LevelChangeChanged();
            }
        }
        private global::System.Double _LO_LevelChange;
        partial void OnLO_LevelChangeChanging(global::System.Double value);
        partial void OnLO_LevelChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LO_Delay
        {
            get
            {
                return _LO_Delay;
            }
            set
            {
                OnLO_DelayChanging(value);
                ReportPropertyChanging("LO_Delay");
                _LO_Delay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LO_Delay");
                OnLO_DelayChanged();
            }
        }
        private global::System.Int32 _LO_Delay;
        partial void OnLO_DelayChanging(global::System.Int32 value);
        partial void OnLO_DelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LOLO_Enabled
        {
            get
            {
                return _LOLO_Enabled;
            }
            set
            {
                OnLOLO_EnabledChanging(value);
                ReportPropertyChanging("LOLO_Enabled");
                _LOLO_Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOLO_Enabled");
                OnLOLO_EnabledChanged();
            }
        }
        private global::System.Boolean _LOLO_Enabled;
        partial void OnLOLO_EnabledChanging(global::System.Boolean value);
        partial void OnLOLO_EnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOLO_Name
        {
            get
            {
                return _LOLO_Name;
            }
            set
            {
                OnLOLO_NameChanging(value);
                ReportPropertyChanging("LOLO_Name");
                _LOLO_Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOLO_Name");
                OnLOLO_NameChanged();
            }
        }
        private global::System.String _LOLO_Name;
        partial void OnLOLO_NameChanging(global::System.String value);
        partial void OnLOLO_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LOLO_LevelChange
        {
            get
            {
                return _LOLO_LevelChange;
            }
            set
            {
                OnLOLO_LevelChangeChanging(value);
                ReportPropertyChanging("LOLO_LevelChange");
                _LOLO_LevelChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOLO_LevelChange");
                OnLOLO_LevelChangeChanged();
            }
        }
        private global::System.Double _LOLO_LevelChange;
        partial void OnLOLO_LevelChangeChanging(global::System.Double value);
        partial void OnLOLO_LevelChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LOLO_Delay
        {
            get
            {
                return _LOLO_Delay;
            }
            set
            {
                OnLOLO_DelayChanging(value);
                ReportPropertyChanging("LOLO_Delay");
                _LOLO_Delay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LOLO_Delay");
                OnLOLO_DelayChanged();
            }
        }
        private global::System.Int32 _LOLO_Delay;
        partial void OnLOLO_DelayChanging(global::System.Int32 value);
        partial void OnLOLO_DelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_AlarmConfigAlarmLog", "AlarmLogSet")]
        public EntityCollection<AlarmLog> AlarmLogSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlarmLog>("PowerMonitoringModel.FK_AlarmConfigAlarmLog", "AlarmLogSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlarmLog>("PowerMonitoringModel.FK_AlarmConfigAlarmLog", "AlarmLogSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_AlarmConfigAlarmTerminal", "AlarmTerminalSet")]
        public EntityCollection<AlarmTerminal> AlarmTerminalSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlarmTerminal>("PowerMonitoringModel.FK_AlarmConfigAlarmTerminal", "AlarmTerminalSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlarmTerminal>("PowerMonitoringModel.FK_AlarmConfigAlarmTerminal", "AlarmTerminalSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_VariableAlarmConfig", "VariableSet")]
        public Variable VariableSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableAlarmConfig", "VariableSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableAlarmConfig", "VariableSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Variable> VariableSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableAlarmConfig", "VariableSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Variable>("PowerMonitoringModel.FK_VariableAlarmConfig", "VariableSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="AlarmLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlarmLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlarmLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="alarmLevelName">Initial value of the AlarmLevelName property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="alarmConfigId">Initial value of the AlarmConfigId property.</param>
        /// <param name="currentValue">Initial value of the CurrentValue property.</param>
        public static AlarmLog CreateAlarmLog(global::System.Int32 id, global::System.String alarmLevelName, global::System.String action, global::System.DateTime timeStamp, global::System.Int32 alarmConfigId, global::System.String currentValue)
        {
            AlarmLog alarmLog = new AlarmLog();
            alarmLog.Id = id;
            alarmLog.AlarmLevelName = alarmLevelName;
            alarmLog.Action = action;
            alarmLog.TimeStamp = timeStamp;
            alarmLog.AlarmConfigId = alarmConfigId;
            alarmLog.CurrentValue = currentValue;
            return alarmLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlarmLevelName
        {
            get
            {
                return _AlarmLevelName;
            }
            set
            {
                OnAlarmLevelNameChanging(value);
                ReportPropertyChanging("AlarmLevelName");
                _AlarmLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlarmLevelName");
                OnAlarmLevelNameChanged();
            }
        }
        private global::System.String _AlarmLevelName;
        partial void OnAlarmLevelNameChanging(global::System.String value);
        partial void OnAlarmLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlarmConfigId
        {
            get
            {
                return _AlarmConfigId;
            }
            set
            {
                OnAlarmConfigIdChanging(value);
                ReportPropertyChanging("AlarmConfigId");
                _AlarmConfigId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlarmConfigId");
                OnAlarmConfigIdChanged();
            }
        }
        private global::System.Int32 _AlarmConfigId;
        partial void OnAlarmConfigIdChanging(global::System.Int32 value);
        partial void OnAlarmConfigIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private global::System.String _CurrentValue;
        partial void OnCurrentValueChanging(global::System.String value);
        partial void OnCurrentValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_AlarmConfigAlarmLog", "AlarmConfigSet")]
        public AlarmConfig AlarmConfigSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmLog", "AlarmConfigSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmLog", "AlarmConfigSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlarmConfig> AlarmConfigSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmLog", "AlarmConfigSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmLog", "AlarmConfigSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="AlarmTerminal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlarmTerminal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlarmTerminal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="acknowledged">Initial value of the Acknowledged property.</param>
        /// <param name="alarmLevelName">Initial value of the AlarmLevelName property.</param>
        /// <param name="maxValue">Initial value of the MaxValue property.</param>
        /// <param name="setTime">Initial value of the SetTime property.</param>
        /// <param name="maxValueTime">Initial value of the MaxValueTime property.</param>
        /// <param name="setPoint">Initial value of the SetPoint property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="alarmConfig_Id">Initial value of the AlarmConfig_Id property.</param>
        public static AlarmTerminal CreateAlarmTerminal(global::System.Int32 id, global::System.Boolean active, global::System.Boolean acknowledged, global::System.String alarmLevelName, global::System.Single maxValue, global::System.DateTime setTime, global::System.DateTime maxValueTime, global::System.Double setPoint, global::System.Int32 priority, global::System.Int32 alarmConfig_Id)
        {
            AlarmTerminal alarmTerminal = new AlarmTerminal();
            alarmTerminal.Id = id;
            alarmTerminal.Active = active;
            alarmTerminal.Acknowledged = acknowledged;
            alarmTerminal.AlarmLevelName = alarmLevelName;
            alarmTerminal.MaxValue = maxValue;
            alarmTerminal.SetTime = setTime;
            alarmTerminal.MaxValueTime = maxValueTime;
            alarmTerminal.SetPoint = setPoint;
            alarmTerminal.Priority = priority;
            alarmTerminal.AlarmConfig_Id = alarmConfig_Id;
            return alarmTerminal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Acknowledged
        {
            get
            {
                return _Acknowledged;
            }
            set
            {
                OnAcknowledgedChanging(value);
                ReportPropertyChanging("Acknowledged");
                _Acknowledged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Acknowledged");
                OnAcknowledgedChanged();
            }
        }
        private global::System.Boolean _Acknowledged;
        partial void OnAcknowledgedChanging(global::System.Boolean value);
        partial void OnAcknowledgedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlarmLevelName
        {
            get
            {
                return _AlarmLevelName;
            }
            set
            {
                OnAlarmLevelNameChanging(value);
                ReportPropertyChanging("AlarmLevelName");
                _AlarmLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlarmLevelName");
                OnAlarmLevelNameChanged();
            }
        }
        private global::System.String _AlarmLevelName;
        partial void OnAlarmLevelNameChanging(global::System.String value);
        partial void OnAlarmLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private global::System.Single _MaxValue;
        partial void OnMaxValueChanging(global::System.Single value);
        partial void OnMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SetTime
        {
            get
            {
                return _SetTime;
            }
            set
            {
                OnSetTimeChanging(value);
                ReportPropertyChanging("SetTime");
                _SetTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetTime");
                OnSetTimeChanged();
            }
        }
        private global::System.DateTime _SetTime;
        partial void OnSetTimeChanging(global::System.DateTime value);
        partial void OnSetTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MaxValueTime
        {
            get
            {
                return _MaxValueTime;
            }
            set
            {
                OnMaxValueTimeChanging(value);
                ReportPropertyChanging("MaxValueTime");
                _MaxValueTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValueTime");
                OnMaxValueTimeChanged();
            }
        }
        private global::System.DateTime _MaxValueTime;
        partial void OnMaxValueTimeChanging(global::System.DateTime value);
        partial void OnMaxValueTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeactivatedTime
        {
            get
            {
                return _DeactivatedTime;
            }
            set
            {
                OnDeactivatedTimeChanging(value);
                ReportPropertyChanging("DeactivatedTime");
                _DeactivatedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeactivatedTime");
                OnDeactivatedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeactivatedTime;
        partial void OnDeactivatedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDeactivatedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SetPoint
        {
            get
            {
                return _SetPoint;
            }
            set
            {
                OnSetPointChanging(value);
                ReportPropertyChanging("SetPoint");
                _SetPoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetPoint");
                OnSetPointChanged();
            }
        }
        private global::System.Double _SetPoint;
        partial void OnSetPointChanging(global::System.Double value);
        partial void OnSetPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlarmConfig_Id
        {
            get
            {
                return _AlarmConfig_Id;
            }
            set
            {
                OnAlarmConfig_IdChanging(value);
                ReportPropertyChanging("AlarmConfig_Id");
                _AlarmConfig_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlarmConfig_Id");
                OnAlarmConfig_IdChanged();
            }
        }
        private global::System.Int32 _AlarmConfig_Id;
        partial void OnAlarmConfig_IdChanging(global::System.Int32 value);
        partial void OnAlarmConfig_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_AlarmConfigAlarmTerminal", "AlarmConfigSet")]
        public AlarmConfig AlarmConfigSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmTerminal", "AlarmConfigSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmTerminal", "AlarmConfigSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlarmConfig> AlarmConfigSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmTerminal", "AlarmConfigSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_AlarmConfigAlarmTerminal", "AlarmConfigSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="DoubleLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoubleLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoubleLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="doubleValue">Initial value of the DoubleValue property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="variableId">Initial value of the VariableId property.</param>
        public static DoubleLog CreateDoubleLog(global::System.Int32 id, global::System.Double doubleValue, global::System.DateTime timeStamp, global::System.Int32 variableId)
        {
            DoubleLog doubleLog = new DoubleLog();
            doubleLog.Id = id;
            doubleLog.DoubleValue = doubleValue;
            doubleLog.TimeStamp = timeStamp;
            doubleLog.VariableId = variableId;
            return doubleLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DoubleValue
        {
            get
            {
                return _DoubleValue;
            }
            set
            {
                OnDoubleValueChanging(value);
                ReportPropertyChanging("DoubleValue");
                _DoubleValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoubleValue");
                OnDoubleValueChanged();
            }
        }
        private global::System.Double _DoubleValue;
        partial void OnDoubleValueChanging(global::System.Double value);
        partial void OnDoubleValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VariableId
        {
            get
            {
                return _VariableId;
            }
            set
            {
                OnVariableIdChanging(value);
                ReportPropertyChanging("VariableId");
                _VariableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VariableId");
                OnVariableIdChanged();
            }
        }
        private global::System.Int32 _VariableId;
        partial void OnVariableIdChanging(global::System.Int32 value);
        partial void OnVariableIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_VariableDoubleLog", "VariableSet")]
        public Variable VariableSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableDoubleLog", "VariableSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableDoubleLog", "VariableSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Variable> VariableSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableDoubleLog", "VariableSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Variable>("PowerMonitoringModel.FK_VariableDoubleLog", "VariableSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="SingleHistogram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SingleHistogram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SingleHistogram object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="singleValue">Initial value of the SingleValue property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="variableId">Initial value of the VariableId property.</param>
        public static SingleHistogram CreateSingleHistogram(global::System.Int32 id, global::System.Single singleValue, global::System.DateTime timeStamp, global::System.Int32 variableId)
        {
            SingleHistogram singleHistogram = new SingleHistogram();
            singleHistogram.Id = id;
            singleHistogram.SingleValue = singleValue;
            singleHistogram.TimeStamp = timeStamp;
            singleHistogram.VariableId = variableId;
            return singleHistogram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single SingleValue
        {
            get
            {
                return _SingleValue;
            }
            set
            {
                OnSingleValueChanging(value);
                ReportPropertyChanging("SingleValue");
                _SingleValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleValue");
                OnSingleValueChanged();
            }
        }
        private global::System.Single _SingleValue;
        partial void OnSingleValueChanging(global::System.Single value);
        partial void OnSingleValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VariableId
        {
            get
            {
                return _VariableId;
            }
            set
            {
                OnVariableIdChanging(value);
                ReportPropertyChanging("VariableId");
                _VariableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VariableId");
                OnVariableIdChanged();
            }
        }
        private global::System.Int32 _VariableId;
        partial void OnVariableIdChanging(global::System.Int32 value);
        partial void OnVariableIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "VariableSingleHistogram", "Variable")]
        public Variable Variable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.VariableSingleHistogram", "Variable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.VariableSingleHistogram", "Variable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Variable> VariableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.VariableSingleHistogram", "Variable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Variable>("PowerMonitoringModel.VariableSingleHistogram", "Variable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="SingleLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SingleLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SingleLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="singleValue">Initial value of the SingleValue property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="variableId">Initial value of the VariableId property.</param>
        public static SingleLog CreateSingleLog(global::System.Int32 id, global::System.Single singleValue, global::System.DateTime timeStamp, global::System.Int32 variableId)
        {
            SingleLog singleLog = new SingleLog();
            singleLog.Id = id;
            singleLog.SingleValue = singleValue;
            singleLog.TimeStamp = timeStamp;
            singleLog.VariableId = variableId;
            return singleLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single SingleValue
        {
            get
            {
                return _SingleValue;
            }
            set
            {
                OnSingleValueChanging(value);
                ReportPropertyChanging("SingleValue");
                _SingleValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleValue");
                OnSingleValueChanged();
            }
        }
        private global::System.Single _SingleValue;
        partial void OnSingleValueChanging(global::System.Single value);
        partial void OnSingleValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VariableId
        {
            get
            {
                return _VariableId;
            }
            set
            {
                OnVariableIdChanging(value);
                ReportPropertyChanging("VariableId");
                _VariableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VariableId");
                OnVariableIdChanged();
            }
        }
        private global::System.Int32 _VariableId;
        partial void OnVariableIdChanging(global::System.Int32 value);
        partial void OnVariableIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_VariableSingleLog", "VariableSet")]
        public Variable VariableSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableSingleLog", "VariableSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableSingleLog", "VariableSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Variable> VariableSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Variable>("PowerMonitoringModel.FK_VariableSingleLog", "VariableSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Variable>("PowerMonitoringModel.FK_VariableSingleLog", "VariableSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PowerMonitoringModel", Name="Variable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Variable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Variable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="dataLoggingEnabled">Initial value of the DataLoggingEnabled property.</param>
        public static Variable CreateVariable(global::System.Int32 id, global::System.String name, global::System.String type, global::System.Boolean dataLoggingEnabled)
        {
            Variable variable = new Variable();
            variable.Id = id;
            variable.Name = name;
            variable.Type = type;
            variable.DataLoggingEnabled = dataLoggingEnabled;
            return variable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DataLoggingEnabled
        {
            get
            {
                return _DataLoggingEnabled;
            }
            set
            {
                OnDataLoggingEnabledChanging(value);
                ReportPropertyChanging("DataLoggingEnabled");
                _DataLoggingEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataLoggingEnabled");
                OnDataLoggingEnabledChanged();
            }
        }
        private global::System.Boolean _DataLoggingEnabled;
        partial void OnDataLoggingEnabledChanging(global::System.Boolean value);
        partial void OnDataLoggingEnabledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_VariableAlarmConfig", "AlarmConfigSet")]
        public AlarmConfig AlarmConfigSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_VariableAlarmConfig", "AlarmConfigSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_VariableAlarmConfig", "AlarmConfigSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlarmConfig> AlarmConfigSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_VariableAlarmConfig", "AlarmConfigSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlarmConfig>("PowerMonitoringModel.FK_VariableAlarmConfig", "AlarmConfigSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_VariableDoubleLog", "DoubleLogSet")]
        public EntityCollection<DoubleLog> DoubleLogSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoubleLog>("PowerMonitoringModel.FK_VariableDoubleLog", "DoubleLogSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoubleLog>("PowerMonitoringModel.FK_VariableDoubleLog", "DoubleLogSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "FK_VariableSingleLog", "SingleLogSet")]
        public EntityCollection<SingleLog> SingleLogSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SingleLog>("PowerMonitoringModel.FK_VariableSingleLog", "SingleLogSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SingleLog>("PowerMonitoringModel.FK_VariableSingleLog", "SingleLogSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PowerMonitoringModel", "VariableSingleHistogram", "SingleHistogram")]
        public EntityCollection<SingleHistogram> SingleHistogram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SingleHistogram>("PowerMonitoringModel.VariableSingleHistogram", "SingleHistogram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SingleHistogram>("PowerMonitoringModel.VariableSingleHistogram", "SingleHistogram", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
