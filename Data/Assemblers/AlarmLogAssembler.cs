//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2013.07.14 - 16:59:49
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;
using PowerMonitoring.Data;

namespace PowerMonitoring.Data
{

    /// <summary>
    /// Assembler for <see cref="AlarmLog"/> and <see cref="AlarmLogDto"/>.
    /// </summary>
    public static partial class AlarmLogAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="AlarmLogDto"/> converted from <see cref="AlarmLog"/>.</param>
        static partial void OnDTO(this AlarmLog entity, AlarmLogDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="AlarmLog"/> converted from <see cref="AlarmLogDto"/>.</param>
        static partial void OnEntity(this AlarmLogDto dto, AlarmLog entity);

        /// <summary>
        /// Converts this instance of <see cref="AlarmLogDto"/> to an instance of <see cref="AlarmLog"/>.
        /// </summary>
        /// <param name="dto"><see cref="AlarmLogDto"/> to convert.</param>
        public static AlarmLog ToEntity(this AlarmLogDto dto)
        {
            if (dto == null) return null;

            var entity = new AlarmLog();

            entity.AlarmLogId = dto.AlarmLogId;
            entity.AlarmLevelName = dto.AlarmLevelName;
            entity.Action = dto.Action;
            entity.TimeStamp = dto.TimeStamp;
            entity.VariableId = dto.VariableId;
            entity.CurrentValue = dto.CurrentValue;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="AlarmLog"/> to an instance of <see cref="AlarmLogDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="AlarmLog"/> to convert.</param>
        public static AlarmLogDto ToDTO(this AlarmLog entity)
        {
            if (entity == null) return null;

            var dto = new AlarmLogDto();

            dto.AlarmLogId = entity.AlarmLogId;
            dto.AlarmLevelName = entity.AlarmLevelName;
            dto.Action = entity.Action;
            dto.TimeStamp = entity.TimeStamp;
            dto.VariableId = entity.VariableId;
            dto.CurrentValue = entity.CurrentValue;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="AlarmLogDto"/> to an instance of <see cref="AlarmLog"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<AlarmLog> ToEntities(this IEnumerable<AlarmLogDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="AlarmLog"/> to an instance of <see cref="AlarmLogDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<AlarmLogDto> ToDTOs(this IEnumerable<AlarmLog> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
